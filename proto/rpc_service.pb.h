// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc_service.proto

#ifndef PROTOBUF_rpc_5fservice_2eproto__INCLUDED
#define PROTOBUF_rpc_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "tensorflow/core/framework/tensor.pb.h"
#include "tensorflow/core/framework/graph.pb.h"
#include "tensorflow/core/framework/tensor_shape.pb.h"
// @@protoc_insertion_point(includes)
namespace adaptive_system {
class Empty;
class EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class Gradient;
class GradientDefaultTypeInternal;
extern GradientDefaultTypeInternal _Gradient_default_instance_;
class Loss;
class LossDefaultTypeInternal;
extern LossDefaultTypeInternal _Loss_default_instance_;
class NamedGradients;
class NamedGradientsDefaultTypeInternal;
extern NamedGradientsDefaultTypeInternal _NamedGradients_default_instance_;
class Names;
class NamesDefaultTypeInternal;
extern NamesDefaultTypeInternal _Names_default_instance_;
class PartialState;
class PartialStateDefaultTypeInternal;
extern PartialStateDefaultTypeInternal _PartialState_default_instance_;
class QuantizationLevel;
class QuantizationLevelDefaultTypeInternal;
extern QuantizationLevelDefaultTypeInternal _QuantizationLevel_default_instance_;
class Tuple;
class TupleDefaultTypeInternal;
extern TupleDefaultTypeInternal _Tuple_default_instance_;
}  // namespace adaptive_system
namespace tensorflow {
class GraphDef;
class GraphDefDefaultTypeInternal;
extern GraphDefDefaultTypeInternal _GraphDef_default_instance_;
class TensorProto;
class TensorProtoDefaultTypeInternal;
extern TensorProtoDefaultTypeInternal _TensorProto_default_instance_;
class TensorShapeProto;
class TensorShapeProtoDefaultTypeInternal;
extern TensorShapeProtoDefaultTypeInternal _TensorShapeProto_default_instance_;
class TensorShapeProto_Dim;
class TensorShapeProto_DimDefaultTypeInternal;
extern TensorShapeProto_DimDefaultTypeInternal _TensorShapeProto_Dim_default_instance_;
}  // namespace tensorflow

namespace adaptive_system {

namespace protobuf_rpc_5fservice_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_rpc_5fservice_2eproto

enum GRAD_QUANT_LEVEL {
  TWO = 0,
  FOUR = 1,
  EIGHT = 2,
  SIXTEEN = 3,
  NONE = 4,
  GRAD_QUANT_LEVEL_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GRAD_QUANT_LEVEL_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GRAD_QUANT_LEVEL_IsValid(int value);
const GRAD_QUANT_LEVEL GRAD_QUANT_LEVEL_MIN = TWO;
const GRAD_QUANT_LEVEL GRAD_QUANT_LEVEL_MAX = NONE;
const int GRAD_QUANT_LEVEL_ARRAYSIZE = GRAD_QUANT_LEVEL_MAX + 1;

const ::google::protobuf::EnumDescriptor* GRAD_QUANT_LEVEL_descriptor();
inline const ::std::string& GRAD_QUANT_LEVEL_Name(GRAD_QUANT_LEVEL value) {
  return ::google::protobuf::internal::NameOfEnum(
    GRAD_QUANT_LEVEL_descriptor(), value);
}
inline bool GRAD_QUANT_LEVEL_Parse(
    const ::std::string& name, GRAD_QUANT_LEVEL* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GRAD_QUANT_LEVEL>(
    GRAD_QUANT_LEVEL_descriptor(), name, value);
}
// ===================================================================

class Empty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:adaptive_system.Empty) */ {
 public:
  Empty();
  virtual ~Empty();

  Empty(const Empty& from);

  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Empty& default_instance();

  static inline const Empty* internal_default_instance() {
    return reinterpret_cast<const Empty*>(
               &_Empty_default_instance_);
  }

  void Swap(Empty* other);

  // implements Message ----------------------------------------------

  inline Empty* New() const PROTOBUF_FINAL { return New(NULL); }

  Empty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Empty& from);
  void MergeFrom(const Empty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Empty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:adaptive_system.Empty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Names : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:adaptive_system.Names) */ {
 public:
  Names();
  virtual ~Names();

  Names(const Names& from);

  inline Names& operator=(const Names& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Names& default_instance();

  static inline const Names* internal_default_instance() {
    return reinterpret_cast<const Names*>(
               &_Names_default_instance_);
  }

  void Swap(Names* other);

  // implements Message ----------------------------------------------

  inline Names* New() const PROTOBUF_FINAL { return New(NULL); }

  Names* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Names& from);
  void MergeFrom(const Names& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Names* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string variable_name = 1;
  void clear_variable_name();
  static const int kVariableNameFieldNumber = 1;
  const ::std::string& variable_name() const;
  void set_variable_name(const ::std::string& value);
  #if LANG_CXX11
  void set_variable_name(::std::string&& value);
  #endif
  void set_variable_name(const char* value);
  void set_variable_name(const char* value, size_t size);
  ::std::string* mutable_variable_name();
  ::std::string* release_variable_name();
  void set_allocated_variable_name(::std::string* variable_name);

  // string gradient_name = 2;
  void clear_gradient_name();
  static const int kGradientNameFieldNumber = 2;
  const ::std::string& gradient_name() const;
  void set_gradient_name(const ::std::string& value);
  #if LANG_CXX11
  void set_gradient_name(::std::string&& value);
  #endif
  void set_gradient_name(const char* value);
  void set_gradient_name(const char* value, size_t size);
  ::std::string* mutable_gradient_name();
  ::std::string* release_gradient_name();
  void set_allocated_gradient_name(::std::string* gradient_name);

  // string assign_name = 3;
  void clear_assign_name();
  static const int kAssignNameFieldNumber = 3;
  const ::std::string& assign_name() const;
  void set_assign_name(const ::std::string& value);
  #if LANG_CXX11
  void set_assign_name(::std::string&& value);
  #endif
  void set_assign_name(const char* value);
  void set_assign_name(const char* value, size_t size);
  ::std::string* mutable_assign_name();
  ::std::string* release_assign_name();
  void set_allocated_assign_name(::std::string* assign_name);

  // string assign_add_name = 4;
  void clear_assign_add_name();
  static const int kAssignAddNameFieldNumber = 4;
  const ::std::string& assign_add_name() const;
  void set_assign_add_name(const ::std::string& value);
  #if LANG_CXX11
  void set_assign_add_name(::std::string&& value);
  #endif
  void set_assign_add_name(const char* value);
  void set_assign_add_name(const char* value, size_t size);
  ::std::string* mutable_assign_add_name();
  ::std::string* release_assign_add_name();
  void set_allocated_assign_add_name(::std::string* assign_add_name);

  // string placeholder_assign_name = 5;
  void clear_placeholder_assign_name();
  static const int kPlaceholderAssignNameFieldNumber = 5;
  const ::std::string& placeholder_assign_name() const;
  void set_placeholder_assign_name(const ::std::string& value);
  #if LANG_CXX11
  void set_placeholder_assign_name(::std::string&& value);
  #endif
  void set_placeholder_assign_name(const char* value);
  void set_placeholder_assign_name(const char* value, size_t size);
  ::std::string* mutable_placeholder_assign_name();
  ::std::string* release_placeholder_assign_name();
  void set_allocated_placeholder_assign_name(::std::string* placeholder_assign_name);

  // string placeholder_assign_add_name = 6;
  void clear_placeholder_assign_add_name();
  static const int kPlaceholderAssignAddNameFieldNumber = 6;
  const ::std::string& placeholder_assign_add_name() const;
  void set_placeholder_assign_add_name(const ::std::string& value);
  #if LANG_CXX11
  void set_placeholder_assign_add_name(::std::string&& value);
  #endif
  void set_placeholder_assign_add_name(const char* value);
  void set_placeholder_assign_add_name(const char* value, size_t size);
  ::std::string* mutable_placeholder_assign_add_name();
  ::std::string* release_placeholder_assign_add_name();
  void set_allocated_placeholder_assign_add_name(::std::string* placeholder_assign_add_name);

  // @@protoc_insertion_point(class_scope:adaptive_system.Names)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr variable_name_;
  ::google::protobuf::internal::ArenaStringPtr gradient_name_;
  ::google::protobuf::internal::ArenaStringPtr assign_name_;
  ::google::protobuf::internal::ArenaStringPtr assign_add_name_;
  ::google::protobuf::internal::ArenaStringPtr placeholder_assign_name_;
  ::google::protobuf::internal::ArenaStringPtr placeholder_assign_add_name_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class Tuple : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:adaptive_system.Tuple) */ {
 public:
  Tuple();
  virtual ~Tuple();

  Tuple(const Tuple& from);

  inline Tuple& operator=(const Tuple& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tuple& default_instance();

  static inline const Tuple* internal_default_instance() {
    return reinterpret_cast<const Tuple*>(
               &_Tuple_default_instance_);
  }

  void Swap(Tuple* other);

  // implements Message ----------------------------------------------

  inline Tuple* New() const PROTOBUF_FINAL { return New(NULL); }

  Tuple* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Tuple& from);
  void MergeFrom(const Tuple& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Tuple* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .adaptive_system.Names> map_names = 1;
  int map_names_size() const;
  void clear_map_names();
  static const int kMapNamesFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::adaptive_system::Names >&
      map_names() const;
  ::google::protobuf::Map< ::std::string, ::adaptive_system::Names >*
      mutable_map_names();

  // map<string, .tensorflow.TensorProto> map_parameters = 2;
  int map_parameters_size() const;
  void clear_map_parameters();
  static const int kMapParametersFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::tensorflow::TensorProto >&
      map_parameters() const;
  ::google::protobuf::Map< ::std::string, ::tensorflow::TensorProto >*
      mutable_map_parameters();

  // string loss_name = 6;
  void clear_loss_name();
  static const int kLossNameFieldNumber = 6;
  const ::std::string& loss_name() const;
  void set_loss_name(const ::std::string& value);
  #if LANG_CXX11
  void set_loss_name(::std::string&& value);
  #endif
  void set_loss_name(const char* value);
  void set_loss_name(const char* value, size_t size);
  ::std::string* mutable_loss_name();
  ::std::string* release_loss_name();
  void set_allocated_loss_name(::std::string* loss_name);

  // string init_name = 7;
  void clear_init_name();
  static const int kInitNameFieldNumber = 7;
  const ::std::string& init_name() const;
  void set_init_name(const ::std::string& value);
  #if LANG_CXX11
  void set_init_name(::std::string&& value);
  #endif
  void set_init_name(const char* value);
  void set_init_name(const char* value, size_t size);
  ::std::string* mutable_init_name();
  ::std::string* release_init_name();
  void set_allocated_init_name(::std::string* init_name);

  // string image_placeholder_name = 8;
  void clear_image_placeholder_name();
  static const int kImagePlaceholderNameFieldNumber = 8;
  const ::std::string& image_placeholder_name() const;
  void set_image_placeholder_name(const ::std::string& value);
  #if LANG_CXX11
  void set_image_placeholder_name(::std::string&& value);
  #endif
  void set_image_placeholder_name(const char* value);
  void set_image_placeholder_name(const char* value, size_t size);
  ::std::string* mutable_image_placeholder_name();
  ::std::string* release_image_placeholder_name();
  void set_allocated_image_placeholder_name(::std::string* image_placeholder_name);

  // string label_placeholder_name = 9;
  void clear_label_placeholder_name();
  static const int kLabelPlaceholderNameFieldNumber = 9;
  const ::std::string& label_placeholder_name() const;
  void set_label_placeholder_name(const ::std::string& value);
  #if LANG_CXX11
  void set_label_placeholder_name(::std::string&& value);
  #endif
  void set_label_placeholder_name(const char* value);
  void set_label_placeholder_name(const char* value, size_t size);
  ::std::string* mutable_label_placeholder_name();
  ::std::string* release_label_placeholder_name();
  void set_allocated_label_placeholder_name(::std::string* label_placeholder_name);

  // string training_op_name = 10;
  void clear_training_op_name();
  static const int kTrainingOpNameFieldNumber = 10;
  const ::std::string& training_op_name() const;
  void set_training_op_name(const ::std::string& value);
  #if LANG_CXX11
  void set_training_op_name(::std::string&& value);
  #endif
  void set_training_op_name(const char* value);
  void set_training_op_name(const char* value, size_t size);
  ::std::string* mutable_training_op_name();
  ::std::string* release_training_op_name();
  void set_allocated_training_op_name(::std::string* training_op_name);

  // .tensorflow.GraphDef graph = 5;
  bool has_graph() const;
  void clear_graph();
  static const int kGraphFieldNumber = 5;
  const ::tensorflow::GraphDef& graph() const;
  ::tensorflow::GraphDef* mutable_graph();
  ::tensorflow::GraphDef* release_graph();
  void set_allocated_graph(::tensorflow::GraphDef* graph);

  // float lr = 3;
  void clear_lr();
  static const int kLrFieldNumber = 3;
  float lr() const;
  void set_lr(float value);

  // int32 interval = 4;
  void clear_interval();
  static const int kIntervalFieldNumber = 4;
  ::google::protobuf::int32 interval() const;
  void set_interval(::google::protobuf::int32 value);

  // int32 total_iter = 11;
  void clear_total_iter();
  static const int kTotalIterFieldNumber = 11;
  ::google::protobuf::int32 total_iter() const;
  void set_total_iter(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:adaptive_system.Tuple)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::adaptive_system::Names,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      Tuple_MapNamesEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::adaptive_system::Names,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > map_names_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::tensorflow::TensorProto,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      Tuple_MapParametersEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::tensorflow::TensorProto,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > map_parameters_;
  ::google::protobuf::internal::ArenaStringPtr loss_name_;
  ::google::protobuf::internal::ArenaStringPtr init_name_;
  ::google::protobuf::internal::ArenaStringPtr image_placeholder_name_;
  ::google::protobuf::internal::ArenaStringPtr label_placeholder_name_;
  ::google::protobuf::internal::ArenaStringPtr training_op_name_;
  ::tensorflow::GraphDef* graph_;
  float lr_;
  ::google::protobuf::int32 interval_;
  ::google::protobuf::int32 total_iter_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QuantizationLevel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:adaptive_system.QuantizationLevel) */ {
 public:
  QuantizationLevel();
  virtual ~QuantizationLevel();

  QuantizationLevel(const QuantizationLevel& from);

  inline QuantizationLevel& operator=(const QuantizationLevel& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuantizationLevel& default_instance();

  static inline const QuantizationLevel* internal_default_instance() {
    return reinterpret_cast<const QuantizationLevel*>(
               &_QuantizationLevel_default_instance_);
  }

  void Swap(QuantizationLevel* other);

  // implements Message ----------------------------------------------

  inline QuantizationLevel* New() const PROTOBUF_FINAL { return New(NULL); }

  QuantizationLevel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QuantizationLevel& from);
  void MergeFrom(const QuantizationLevel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QuantizationLevel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .adaptive_system.GRAD_QUANT_LEVEL level = 1;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::adaptive_system::GRAD_QUANT_LEVEL level() const;
  void set_level(::adaptive_system::GRAD_QUANT_LEVEL value);

  // @@protoc_insertion_point(class_scope:adaptive_system.QuantizationLevel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int level_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Gradient : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:adaptive_system.Gradient) */ {
 public:
  Gradient();
  virtual ~Gradient();

  Gradient(const Gradient& from);

  inline Gradient& operator=(const Gradient& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Gradient& default_instance();

  static inline const Gradient* internal_default_instance() {
    return reinterpret_cast<const Gradient*>(
               &_Gradient_default_instance_);
  }

  void Swap(Gradient* other);

  // implements Message ----------------------------------------------

  inline Gradient* New() const PROTOBUF_FINAL { return New(NULL); }

  Gradient* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Gradient& from);
  void MergeFrom(const Gradient& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Gradient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes tensor_le_8 = 3;
  void clear_tensor_le_8();
  static const int kTensorLe8FieldNumber = 3;
  const ::std::string& tensor_le_8() const;
  void set_tensor_le_8(const ::std::string& value);
  #if LANG_CXX11
  void set_tensor_le_8(::std::string&& value);
  #endif
  void set_tensor_le_8(const char* value);
  void set_tensor_le_8(const void* value, size_t size);
  ::std::string* mutable_tensor_le_8();
  ::std::string* release_tensor_le_8();
  void set_allocated_tensor_le_8(::std::string* tensor_le_8);

  // .tensorflow.TensorProto tensor_ge_8 = 2;
  bool has_tensor_ge_8() const;
  void clear_tensor_ge_8();
  static const int kTensorGe8FieldNumber = 2;
  const ::tensorflow::TensorProto& tensor_ge_8() const;
  ::tensorflow::TensorProto* mutable_tensor_ge_8();
  ::tensorflow::TensorProto* release_tensor_ge_8();
  void set_allocated_tensor_ge_8(::tensorflow::TensorProto* tensor_ge_8);

  // .tensorflow.TensorShapeProto tensor_shape = 6;
  bool has_tensor_shape() const;
  void clear_tensor_shape();
  static const int kTensorShapeFieldNumber = 6;
  const ::tensorflow::TensorShapeProto& tensor_shape() const;
  ::tensorflow::TensorShapeProto* mutable_tensor_shape();
  ::tensorflow::TensorShapeProto* release_tensor_shape();
  void set_allocated_tensor_shape(::tensorflow::TensorShapeProto* tensor_shape);

  // .adaptive_system.GRAD_QUANT_LEVEL level = 1;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::adaptive_system::GRAD_QUANT_LEVEL level() const;
  void set_level(::adaptive_system::GRAD_QUANT_LEVEL value);

  // float max = 4;
  void clear_max();
  static const int kMaxFieldNumber = 4;
  float max() const;
  void set_max(float value);

  // float min = 5;
  void clear_min();
  static const int kMinFieldNumber = 5;
  float min() const;
  void set_min(float value);

  // @@protoc_insertion_point(class_scope:adaptive_system.Gradient)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr tensor_le_8_;
  ::tensorflow::TensorProto* tensor_ge_8_;
  ::tensorflow::TensorShapeProto* tensor_shape_;
  int level_;
  float max_;
  float min_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class NamedGradients : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:adaptive_system.NamedGradients) */ {
 public:
  NamedGradients();
  virtual ~NamedGradients();

  NamedGradients(const NamedGradients& from);

  inline NamedGradients& operator=(const NamedGradients& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NamedGradients& default_instance();

  static inline const NamedGradients* internal_default_instance() {
    return reinterpret_cast<const NamedGradients*>(
               &_NamedGradients_default_instance_);
  }

  void Swap(NamedGradients* other);

  // implements Message ----------------------------------------------

  inline NamedGradients* New() const PROTOBUF_FINAL { return New(NULL); }

  NamedGradients* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NamedGradients& from);
  void MergeFrom(const NamedGradients& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NamedGradients* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .adaptive_system.Gradient> name_to_gradient = 1;
  int name_to_gradient_size() const;
  void clear_name_to_gradient();
  static const int kNameToGradientFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::adaptive_system::Gradient >&
      name_to_gradient() const;
  ::google::protobuf::Map< ::std::string, ::adaptive_system::Gradient >*
      mutable_name_to_gradient();

  // @@protoc_insertion_point(class_scope:adaptive_system.NamedGradients)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::adaptive_system::Gradient,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      NamedGradients_NameToGradientEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::adaptive_system::Gradient,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > name_to_gradient_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PartialState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:adaptive_system.PartialState) */ {
 public:
  PartialState();
  virtual ~PartialState();

  PartialState(const PartialState& from);

  inline PartialState& operator=(const PartialState& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PartialState& default_instance();

  static inline const PartialState* internal_default_instance() {
    return reinterpret_cast<const PartialState*>(
               &_PartialState_default_instance_);
  }

  void Swap(PartialState* other);

  // implements Message ----------------------------------------------

  inline PartialState* New() const PROTOBUF_FINAL { return New(NULL); }

  PartialState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PartialState& from);
  void MergeFrom(const PartialState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PartialState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .tensorflow.TensorProto tensor = 1;
  bool has_tensor() const;
  void clear_tensor();
  static const int kTensorFieldNumber = 1;
  const ::tensorflow::TensorProto& tensor() const;
  ::tensorflow::TensorProto* mutable_tensor();
  ::tensorflow::TensorProto* release_tensor();
  void set_allocated_tensor(::tensorflow::TensorProto* tensor);

  // float loss = 2;
  void clear_loss();
  static const int kLossFieldNumber = 2;
  float loss() const;
  void set_loss(float value);

  // @@protoc_insertion_point(class_scope:adaptive_system.PartialState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::tensorflow::TensorProto* tensor_;
  float loss_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Loss : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:adaptive_system.Loss) */ {
 public:
  Loss();
  virtual ~Loss();

  Loss(const Loss& from);

  inline Loss& operator=(const Loss& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Loss& default_instance();

  static inline const Loss* internal_default_instance() {
    return reinterpret_cast<const Loss*>(
               &_Loss_default_instance_);
  }

  void Swap(Loss* other);

  // implements Message ----------------------------------------------

  inline Loss* New() const PROTOBUF_FINAL { return New(NULL); }

  Loss* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Loss& from);
  void MergeFrom(const Loss& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Loss* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float loss = 1;
  void clear_loss();
  static const int kLossFieldNumber = 1;
  float loss() const;
  void set_loss(float value);

  // @@protoc_insertion_point(class_scope:adaptive_system.Loss)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float loss_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_5fservice_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Empty

// -------------------------------------------------------------------

// Names

// string variable_name = 1;
inline void Names::clear_variable_name() {
  variable_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Names::variable_name() const {
  // @@protoc_insertion_point(field_get:adaptive_system.Names.variable_name)
  return variable_name_.GetNoArena();
}
inline void Names::set_variable_name(const ::std::string& value) {
  
  variable_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:adaptive_system.Names.variable_name)
}
#if LANG_CXX11
inline void Names::set_variable_name(::std::string&& value) {
  
  variable_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:adaptive_system.Names.variable_name)
}
#endif
inline void Names::set_variable_name(const char* value) {
  
  variable_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:adaptive_system.Names.variable_name)
}
inline void Names::set_variable_name(const char* value, size_t size) {
  
  variable_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:adaptive_system.Names.variable_name)
}
inline ::std::string* Names::mutable_variable_name() {
  
  // @@protoc_insertion_point(field_mutable:adaptive_system.Names.variable_name)
  return variable_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Names::release_variable_name() {
  // @@protoc_insertion_point(field_release:adaptive_system.Names.variable_name)
  
  return variable_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Names::set_allocated_variable_name(::std::string* variable_name) {
  if (variable_name != NULL) {
    
  } else {
    
  }
  variable_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), variable_name);
  // @@protoc_insertion_point(field_set_allocated:adaptive_system.Names.variable_name)
}

// string gradient_name = 2;
inline void Names::clear_gradient_name() {
  gradient_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Names::gradient_name() const {
  // @@protoc_insertion_point(field_get:adaptive_system.Names.gradient_name)
  return gradient_name_.GetNoArena();
}
inline void Names::set_gradient_name(const ::std::string& value) {
  
  gradient_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:adaptive_system.Names.gradient_name)
}
#if LANG_CXX11
inline void Names::set_gradient_name(::std::string&& value) {
  
  gradient_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:adaptive_system.Names.gradient_name)
}
#endif
inline void Names::set_gradient_name(const char* value) {
  
  gradient_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:adaptive_system.Names.gradient_name)
}
inline void Names::set_gradient_name(const char* value, size_t size) {
  
  gradient_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:adaptive_system.Names.gradient_name)
}
inline ::std::string* Names::mutable_gradient_name() {
  
  // @@protoc_insertion_point(field_mutable:adaptive_system.Names.gradient_name)
  return gradient_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Names::release_gradient_name() {
  // @@protoc_insertion_point(field_release:adaptive_system.Names.gradient_name)
  
  return gradient_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Names::set_allocated_gradient_name(::std::string* gradient_name) {
  if (gradient_name != NULL) {
    
  } else {
    
  }
  gradient_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gradient_name);
  // @@protoc_insertion_point(field_set_allocated:adaptive_system.Names.gradient_name)
}

// string assign_name = 3;
inline void Names::clear_assign_name() {
  assign_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Names::assign_name() const {
  // @@protoc_insertion_point(field_get:adaptive_system.Names.assign_name)
  return assign_name_.GetNoArena();
}
inline void Names::set_assign_name(const ::std::string& value) {
  
  assign_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:adaptive_system.Names.assign_name)
}
#if LANG_CXX11
inline void Names::set_assign_name(::std::string&& value) {
  
  assign_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:adaptive_system.Names.assign_name)
}
#endif
inline void Names::set_assign_name(const char* value) {
  
  assign_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:adaptive_system.Names.assign_name)
}
inline void Names::set_assign_name(const char* value, size_t size) {
  
  assign_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:adaptive_system.Names.assign_name)
}
inline ::std::string* Names::mutable_assign_name() {
  
  // @@protoc_insertion_point(field_mutable:adaptive_system.Names.assign_name)
  return assign_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Names::release_assign_name() {
  // @@protoc_insertion_point(field_release:adaptive_system.Names.assign_name)
  
  return assign_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Names::set_allocated_assign_name(::std::string* assign_name) {
  if (assign_name != NULL) {
    
  } else {
    
  }
  assign_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), assign_name);
  // @@protoc_insertion_point(field_set_allocated:adaptive_system.Names.assign_name)
}

// string assign_add_name = 4;
inline void Names::clear_assign_add_name() {
  assign_add_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Names::assign_add_name() const {
  // @@protoc_insertion_point(field_get:adaptive_system.Names.assign_add_name)
  return assign_add_name_.GetNoArena();
}
inline void Names::set_assign_add_name(const ::std::string& value) {
  
  assign_add_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:adaptive_system.Names.assign_add_name)
}
#if LANG_CXX11
inline void Names::set_assign_add_name(::std::string&& value) {
  
  assign_add_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:adaptive_system.Names.assign_add_name)
}
#endif
inline void Names::set_assign_add_name(const char* value) {
  
  assign_add_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:adaptive_system.Names.assign_add_name)
}
inline void Names::set_assign_add_name(const char* value, size_t size) {
  
  assign_add_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:adaptive_system.Names.assign_add_name)
}
inline ::std::string* Names::mutable_assign_add_name() {
  
  // @@protoc_insertion_point(field_mutable:adaptive_system.Names.assign_add_name)
  return assign_add_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Names::release_assign_add_name() {
  // @@protoc_insertion_point(field_release:adaptive_system.Names.assign_add_name)
  
  return assign_add_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Names::set_allocated_assign_add_name(::std::string* assign_add_name) {
  if (assign_add_name != NULL) {
    
  } else {
    
  }
  assign_add_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), assign_add_name);
  // @@protoc_insertion_point(field_set_allocated:adaptive_system.Names.assign_add_name)
}

// string placeholder_assign_name = 5;
inline void Names::clear_placeholder_assign_name() {
  placeholder_assign_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Names::placeholder_assign_name() const {
  // @@protoc_insertion_point(field_get:adaptive_system.Names.placeholder_assign_name)
  return placeholder_assign_name_.GetNoArena();
}
inline void Names::set_placeholder_assign_name(const ::std::string& value) {
  
  placeholder_assign_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:adaptive_system.Names.placeholder_assign_name)
}
#if LANG_CXX11
inline void Names::set_placeholder_assign_name(::std::string&& value) {
  
  placeholder_assign_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:adaptive_system.Names.placeholder_assign_name)
}
#endif
inline void Names::set_placeholder_assign_name(const char* value) {
  
  placeholder_assign_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:adaptive_system.Names.placeholder_assign_name)
}
inline void Names::set_placeholder_assign_name(const char* value, size_t size) {
  
  placeholder_assign_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:adaptive_system.Names.placeholder_assign_name)
}
inline ::std::string* Names::mutable_placeholder_assign_name() {
  
  // @@protoc_insertion_point(field_mutable:adaptive_system.Names.placeholder_assign_name)
  return placeholder_assign_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Names::release_placeholder_assign_name() {
  // @@protoc_insertion_point(field_release:adaptive_system.Names.placeholder_assign_name)
  
  return placeholder_assign_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Names::set_allocated_placeholder_assign_name(::std::string* placeholder_assign_name) {
  if (placeholder_assign_name != NULL) {
    
  } else {
    
  }
  placeholder_assign_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), placeholder_assign_name);
  // @@protoc_insertion_point(field_set_allocated:adaptive_system.Names.placeholder_assign_name)
}

// string placeholder_assign_add_name = 6;
inline void Names::clear_placeholder_assign_add_name() {
  placeholder_assign_add_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Names::placeholder_assign_add_name() const {
  // @@protoc_insertion_point(field_get:adaptive_system.Names.placeholder_assign_add_name)
  return placeholder_assign_add_name_.GetNoArena();
}
inline void Names::set_placeholder_assign_add_name(const ::std::string& value) {
  
  placeholder_assign_add_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:adaptive_system.Names.placeholder_assign_add_name)
}
#if LANG_CXX11
inline void Names::set_placeholder_assign_add_name(::std::string&& value) {
  
  placeholder_assign_add_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:adaptive_system.Names.placeholder_assign_add_name)
}
#endif
inline void Names::set_placeholder_assign_add_name(const char* value) {
  
  placeholder_assign_add_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:adaptive_system.Names.placeholder_assign_add_name)
}
inline void Names::set_placeholder_assign_add_name(const char* value, size_t size) {
  
  placeholder_assign_add_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:adaptive_system.Names.placeholder_assign_add_name)
}
inline ::std::string* Names::mutable_placeholder_assign_add_name() {
  
  // @@protoc_insertion_point(field_mutable:adaptive_system.Names.placeholder_assign_add_name)
  return placeholder_assign_add_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Names::release_placeholder_assign_add_name() {
  // @@protoc_insertion_point(field_release:adaptive_system.Names.placeholder_assign_add_name)
  
  return placeholder_assign_add_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Names::set_allocated_placeholder_assign_add_name(::std::string* placeholder_assign_add_name) {
  if (placeholder_assign_add_name != NULL) {
    
  } else {
    
  }
  placeholder_assign_add_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), placeholder_assign_add_name);
  // @@protoc_insertion_point(field_set_allocated:adaptive_system.Names.placeholder_assign_add_name)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Tuple

// map<string, .adaptive_system.Names> map_names = 1;
inline int Tuple::map_names_size() const {
  return map_names_.size();
}
inline void Tuple::clear_map_names() {
  map_names_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::adaptive_system::Names >&
Tuple::map_names() const {
  // @@protoc_insertion_point(field_map:adaptive_system.Tuple.map_names)
  return map_names_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::adaptive_system::Names >*
Tuple::mutable_map_names() {
  // @@protoc_insertion_point(field_mutable_map:adaptive_system.Tuple.map_names)
  return map_names_.MutableMap();
}

// map<string, .tensorflow.TensorProto> map_parameters = 2;
inline int Tuple::map_parameters_size() const {
  return map_parameters_.size();
}
inline void Tuple::clear_map_parameters() {
  map_parameters_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::tensorflow::TensorProto >&
Tuple::map_parameters() const {
  // @@protoc_insertion_point(field_map:adaptive_system.Tuple.map_parameters)
  return map_parameters_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::tensorflow::TensorProto >*
Tuple::mutable_map_parameters() {
  // @@protoc_insertion_point(field_mutable_map:adaptive_system.Tuple.map_parameters)
  return map_parameters_.MutableMap();
}

// float lr = 3;
inline void Tuple::clear_lr() {
  lr_ = 0;
}
inline float Tuple::lr() const {
  // @@protoc_insertion_point(field_get:adaptive_system.Tuple.lr)
  return lr_;
}
inline void Tuple::set_lr(float value) {
  
  lr_ = value;
  // @@protoc_insertion_point(field_set:adaptive_system.Tuple.lr)
}

// int32 interval = 4;
inline void Tuple::clear_interval() {
  interval_ = 0;
}
inline ::google::protobuf::int32 Tuple::interval() const {
  // @@protoc_insertion_point(field_get:adaptive_system.Tuple.interval)
  return interval_;
}
inline void Tuple::set_interval(::google::protobuf::int32 value) {
  
  interval_ = value;
  // @@protoc_insertion_point(field_set:adaptive_system.Tuple.interval)
}

// .tensorflow.GraphDef graph = 5;
inline bool Tuple::has_graph() const {
  return this != internal_default_instance() && graph_ != NULL;
}
inline void Tuple::clear_graph() {
  if (GetArenaNoVirtual() == NULL && graph_ != NULL) delete graph_;
  graph_ = NULL;
}
inline const ::tensorflow::GraphDef& Tuple::graph() const {
  // @@protoc_insertion_point(field_get:adaptive_system.Tuple.graph)
  return graph_ != NULL ? *graph_
                         : *::tensorflow::GraphDef::internal_default_instance();
}
inline ::tensorflow::GraphDef* Tuple::mutable_graph() {
  
  if (graph_ == NULL) {
    graph_ = new ::tensorflow::GraphDef;
  }
  // @@protoc_insertion_point(field_mutable:adaptive_system.Tuple.graph)
  return graph_;
}
inline ::tensorflow::GraphDef* Tuple::release_graph() {
  // @@protoc_insertion_point(field_release:adaptive_system.Tuple.graph)
  
  ::tensorflow::GraphDef* temp = graph_;
  graph_ = NULL;
  return temp;
}
inline void Tuple::set_allocated_graph(::tensorflow::GraphDef* graph) {
  delete graph_;
  if (graph != NULL && graph->GetArena() != NULL) {
    ::tensorflow::GraphDef* new_graph = new ::tensorflow::GraphDef;
    new_graph->CopyFrom(*graph);
    graph = new_graph;
  }
  graph_ = graph;
  if (graph) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:adaptive_system.Tuple.graph)
}

// string loss_name = 6;
inline void Tuple::clear_loss_name() {
  loss_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Tuple::loss_name() const {
  // @@protoc_insertion_point(field_get:adaptive_system.Tuple.loss_name)
  return loss_name_.GetNoArena();
}
inline void Tuple::set_loss_name(const ::std::string& value) {
  
  loss_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:adaptive_system.Tuple.loss_name)
}
#if LANG_CXX11
inline void Tuple::set_loss_name(::std::string&& value) {
  
  loss_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:adaptive_system.Tuple.loss_name)
}
#endif
inline void Tuple::set_loss_name(const char* value) {
  
  loss_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:adaptive_system.Tuple.loss_name)
}
inline void Tuple::set_loss_name(const char* value, size_t size) {
  
  loss_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:adaptive_system.Tuple.loss_name)
}
inline ::std::string* Tuple::mutable_loss_name() {
  
  // @@protoc_insertion_point(field_mutable:adaptive_system.Tuple.loss_name)
  return loss_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tuple::release_loss_name() {
  // @@protoc_insertion_point(field_release:adaptive_system.Tuple.loss_name)
  
  return loss_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tuple::set_allocated_loss_name(::std::string* loss_name) {
  if (loss_name != NULL) {
    
  } else {
    
  }
  loss_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), loss_name);
  // @@protoc_insertion_point(field_set_allocated:adaptive_system.Tuple.loss_name)
}

// string init_name = 7;
inline void Tuple::clear_init_name() {
  init_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Tuple::init_name() const {
  // @@protoc_insertion_point(field_get:adaptive_system.Tuple.init_name)
  return init_name_.GetNoArena();
}
inline void Tuple::set_init_name(const ::std::string& value) {
  
  init_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:adaptive_system.Tuple.init_name)
}
#if LANG_CXX11
inline void Tuple::set_init_name(::std::string&& value) {
  
  init_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:adaptive_system.Tuple.init_name)
}
#endif
inline void Tuple::set_init_name(const char* value) {
  
  init_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:adaptive_system.Tuple.init_name)
}
inline void Tuple::set_init_name(const char* value, size_t size) {
  
  init_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:adaptive_system.Tuple.init_name)
}
inline ::std::string* Tuple::mutable_init_name() {
  
  // @@protoc_insertion_point(field_mutable:adaptive_system.Tuple.init_name)
  return init_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tuple::release_init_name() {
  // @@protoc_insertion_point(field_release:adaptive_system.Tuple.init_name)
  
  return init_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tuple::set_allocated_init_name(::std::string* init_name) {
  if (init_name != NULL) {
    
  } else {
    
  }
  init_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), init_name);
  // @@protoc_insertion_point(field_set_allocated:adaptive_system.Tuple.init_name)
}

// string image_placeholder_name = 8;
inline void Tuple::clear_image_placeholder_name() {
  image_placeholder_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Tuple::image_placeholder_name() const {
  // @@protoc_insertion_point(field_get:adaptive_system.Tuple.image_placeholder_name)
  return image_placeholder_name_.GetNoArena();
}
inline void Tuple::set_image_placeholder_name(const ::std::string& value) {
  
  image_placeholder_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:adaptive_system.Tuple.image_placeholder_name)
}
#if LANG_CXX11
inline void Tuple::set_image_placeholder_name(::std::string&& value) {
  
  image_placeholder_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:adaptive_system.Tuple.image_placeholder_name)
}
#endif
inline void Tuple::set_image_placeholder_name(const char* value) {
  
  image_placeholder_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:adaptive_system.Tuple.image_placeholder_name)
}
inline void Tuple::set_image_placeholder_name(const char* value, size_t size) {
  
  image_placeholder_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:adaptive_system.Tuple.image_placeholder_name)
}
inline ::std::string* Tuple::mutable_image_placeholder_name() {
  
  // @@protoc_insertion_point(field_mutable:adaptive_system.Tuple.image_placeholder_name)
  return image_placeholder_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tuple::release_image_placeholder_name() {
  // @@protoc_insertion_point(field_release:adaptive_system.Tuple.image_placeholder_name)
  
  return image_placeholder_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tuple::set_allocated_image_placeholder_name(::std::string* image_placeholder_name) {
  if (image_placeholder_name != NULL) {
    
  } else {
    
  }
  image_placeholder_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image_placeholder_name);
  // @@protoc_insertion_point(field_set_allocated:adaptive_system.Tuple.image_placeholder_name)
}

// string label_placeholder_name = 9;
inline void Tuple::clear_label_placeholder_name() {
  label_placeholder_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Tuple::label_placeholder_name() const {
  // @@protoc_insertion_point(field_get:adaptive_system.Tuple.label_placeholder_name)
  return label_placeholder_name_.GetNoArena();
}
inline void Tuple::set_label_placeholder_name(const ::std::string& value) {
  
  label_placeholder_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:adaptive_system.Tuple.label_placeholder_name)
}
#if LANG_CXX11
inline void Tuple::set_label_placeholder_name(::std::string&& value) {
  
  label_placeholder_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:adaptive_system.Tuple.label_placeholder_name)
}
#endif
inline void Tuple::set_label_placeholder_name(const char* value) {
  
  label_placeholder_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:adaptive_system.Tuple.label_placeholder_name)
}
inline void Tuple::set_label_placeholder_name(const char* value, size_t size) {
  
  label_placeholder_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:adaptive_system.Tuple.label_placeholder_name)
}
inline ::std::string* Tuple::mutable_label_placeholder_name() {
  
  // @@protoc_insertion_point(field_mutable:adaptive_system.Tuple.label_placeholder_name)
  return label_placeholder_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tuple::release_label_placeholder_name() {
  // @@protoc_insertion_point(field_release:adaptive_system.Tuple.label_placeholder_name)
  
  return label_placeholder_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tuple::set_allocated_label_placeholder_name(::std::string* label_placeholder_name) {
  if (label_placeholder_name != NULL) {
    
  } else {
    
  }
  label_placeholder_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label_placeholder_name);
  // @@protoc_insertion_point(field_set_allocated:adaptive_system.Tuple.label_placeholder_name)
}

// string training_op_name = 10;
inline void Tuple::clear_training_op_name() {
  training_op_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Tuple::training_op_name() const {
  // @@protoc_insertion_point(field_get:adaptive_system.Tuple.training_op_name)
  return training_op_name_.GetNoArena();
}
inline void Tuple::set_training_op_name(const ::std::string& value) {
  
  training_op_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:adaptive_system.Tuple.training_op_name)
}
#if LANG_CXX11
inline void Tuple::set_training_op_name(::std::string&& value) {
  
  training_op_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:adaptive_system.Tuple.training_op_name)
}
#endif
inline void Tuple::set_training_op_name(const char* value) {
  
  training_op_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:adaptive_system.Tuple.training_op_name)
}
inline void Tuple::set_training_op_name(const char* value, size_t size) {
  
  training_op_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:adaptive_system.Tuple.training_op_name)
}
inline ::std::string* Tuple::mutable_training_op_name() {
  
  // @@protoc_insertion_point(field_mutable:adaptive_system.Tuple.training_op_name)
  return training_op_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tuple::release_training_op_name() {
  // @@protoc_insertion_point(field_release:adaptive_system.Tuple.training_op_name)
  
  return training_op_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tuple::set_allocated_training_op_name(::std::string* training_op_name) {
  if (training_op_name != NULL) {
    
  } else {
    
  }
  training_op_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), training_op_name);
  // @@protoc_insertion_point(field_set_allocated:adaptive_system.Tuple.training_op_name)
}

// int32 total_iter = 11;
inline void Tuple::clear_total_iter() {
  total_iter_ = 0;
}
inline ::google::protobuf::int32 Tuple::total_iter() const {
  // @@protoc_insertion_point(field_get:adaptive_system.Tuple.total_iter)
  return total_iter_;
}
inline void Tuple::set_total_iter(::google::protobuf::int32 value) {
  
  total_iter_ = value;
  // @@protoc_insertion_point(field_set:adaptive_system.Tuple.total_iter)
}

// -------------------------------------------------------------------

// QuantizationLevel

// .adaptive_system.GRAD_QUANT_LEVEL level = 1;
inline void QuantizationLevel::clear_level() {
  level_ = 0;
}
inline ::adaptive_system::GRAD_QUANT_LEVEL QuantizationLevel::level() const {
  // @@protoc_insertion_point(field_get:adaptive_system.QuantizationLevel.level)
  return static_cast< ::adaptive_system::GRAD_QUANT_LEVEL >(level_);
}
inline void QuantizationLevel::set_level(::adaptive_system::GRAD_QUANT_LEVEL value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:adaptive_system.QuantizationLevel.level)
}

// -------------------------------------------------------------------

// Gradient

// .adaptive_system.GRAD_QUANT_LEVEL level = 1;
inline void Gradient::clear_level() {
  level_ = 0;
}
inline ::adaptive_system::GRAD_QUANT_LEVEL Gradient::level() const {
  // @@protoc_insertion_point(field_get:adaptive_system.Gradient.level)
  return static_cast< ::adaptive_system::GRAD_QUANT_LEVEL >(level_);
}
inline void Gradient::set_level(::adaptive_system::GRAD_QUANT_LEVEL value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:adaptive_system.Gradient.level)
}

// .tensorflow.TensorProto tensor_ge_8 = 2;
inline bool Gradient::has_tensor_ge_8() const {
  return this != internal_default_instance() && tensor_ge_8_ != NULL;
}
inline void Gradient::clear_tensor_ge_8() {
  if (GetArenaNoVirtual() == NULL && tensor_ge_8_ != NULL) delete tensor_ge_8_;
  tensor_ge_8_ = NULL;
}
inline const ::tensorflow::TensorProto& Gradient::tensor_ge_8() const {
  // @@protoc_insertion_point(field_get:adaptive_system.Gradient.tensor_ge_8)
  return tensor_ge_8_ != NULL ? *tensor_ge_8_
                         : *::tensorflow::TensorProto::internal_default_instance();
}
inline ::tensorflow::TensorProto* Gradient::mutable_tensor_ge_8() {
  
  if (tensor_ge_8_ == NULL) {
    tensor_ge_8_ = new ::tensorflow::TensorProto;
  }
  // @@protoc_insertion_point(field_mutable:adaptive_system.Gradient.tensor_ge_8)
  return tensor_ge_8_;
}
inline ::tensorflow::TensorProto* Gradient::release_tensor_ge_8() {
  // @@protoc_insertion_point(field_release:adaptive_system.Gradient.tensor_ge_8)
  
  ::tensorflow::TensorProto* temp = tensor_ge_8_;
  tensor_ge_8_ = NULL;
  return temp;
}
inline void Gradient::set_allocated_tensor_ge_8(::tensorflow::TensorProto* tensor_ge_8) {
  delete tensor_ge_8_;
  if (tensor_ge_8 != NULL && tensor_ge_8->GetArena() != NULL) {
    ::tensorflow::TensorProto* new_tensor_ge_8 = new ::tensorflow::TensorProto;
    new_tensor_ge_8->CopyFrom(*tensor_ge_8);
    tensor_ge_8 = new_tensor_ge_8;
  }
  tensor_ge_8_ = tensor_ge_8;
  if (tensor_ge_8) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:adaptive_system.Gradient.tensor_ge_8)
}

// bytes tensor_le_8 = 3;
inline void Gradient::clear_tensor_le_8() {
  tensor_le_8_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Gradient::tensor_le_8() const {
  // @@protoc_insertion_point(field_get:adaptive_system.Gradient.tensor_le_8)
  return tensor_le_8_.GetNoArena();
}
inline void Gradient::set_tensor_le_8(const ::std::string& value) {
  
  tensor_le_8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:adaptive_system.Gradient.tensor_le_8)
}
#if LANG_CXX11
inline void Gradient::set_tensor_le_8(::std::string&& value) {
  
  tensor_le_8_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:adaptive_system.Gradient.tensor_le_8)
}
#endif
inline void Gradient::set_tensor_le_8(const char* value) {
  
  tensor_le_8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:adaptive_system.Gradient.tensor_le_8)
}
inline void Gradient::set_tensor_le_8(const void* value, size_t size) {
  
  tensor_le_8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:adaptive_system.Gradient.tensor_le_8)
}
inline ::std::string* Gradient::mutable_tensor_le_8() {
  
  // @@protoc_insertion_point(field_mutable:adaptive_system.Gradient.tensor_le_8)
  return tensor_le_8_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Gradient::release_tensor_le_8() {
  // @@protoc_insertion_point(field_release:adaptive_system.Gradient.tensor_le_8)
  
  return tensor_le_8_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Gradient::set_allocated_tensor_le_8(::std::string* tensor_le_8) {
  if (tensor_le_8 != NULL) {
    
  } else {
    
  }
  tensor_le_8_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tensor_le_8);
  // @@protoc_insertion_point(field_set_allocated:adaptive_system.Gradient.tensor_le_8)
}

// float max = 4;
inline void Gradient::clear_max() {
  max_ = 0;
}
inline float Gradient::max() const {
  // @@protoc_insertion_point(field_get:adaptive_system.Gradient.max)
  return max_;
}
inline void Gradient::set_max(float value) {
  
  max_ = value;
  // @@protoc_insertion_point(field_set:adaptive_system.Gradient.max)
}

// float min = 5;
inline void Gradient::clear_min() {
  min_ = 0;
}
inline float Gradient::min() const {
  // @@protoc_insertion_point(field_get:adaptive_system.Gradient.min)
  return min_;
}
inline void Gradient::set_min(float value) {
  
  min_ = value;
  // @@protoc_insertion_point(field_set:adaptive_system.Gradient.min)
}

// .tensorflow.TensorShapeProto tensor_shape = 6;
inline bool Gradient::has_tensor_shape() const {
  return this != internal_default_instance() && tensor_shape_ != NULL;
}
inline void Gradient::clear_tensor_shape() {
  if (GetArenaNoVirtual() == NULL && tensor_shape_ != NULL) delete tensor_shape_;
  tensor_shape_ = NULL;
}
inline const ::tensorflow::TensorShapeProto& Gradient::tensor_shape() const {
  // @@protoc_insertion_point(field_get:adaptive_system.Gradient.tensor_shape)
  return tensor_shape_ != NULL ? *tensor_shape_
                         : *::tensorflow::TensorShapeProto::internal_default_instance();
}
inline ::tensorflow::TensorShapeProto* Gradient::mutable_tensor_shape() {
  
  if (tensor_shape_ == NULL) {
    tensor_shape_ = new ::tensorflow::TensorShapeProto;
  }
  // @@protoc_insertion_point(field_mutable:adaptive_system.Gradient.tensor_shape)
  return tensor_shape_;
}
inline ::tensorflow::TensorShapeProto* Gradient::release_tensor_shape() {
  // @@protoc_insertion_point(field_release:adaptive_system.Gradient.tensor_shape)
  
  ::tensorflow::TensorShapeProto* temp = tensor_shape_;
  tensor_shape_ = NULL;
  return temp;
}
inline void Gradient::set_allocated_tensor_shape(::tensorflow::TensorShapeProto* tensor_shape) {
  delete tensor_shape_;
  if (tensor_shape != NULL && tensor_shape->GetArena() != NULL) {
    ::tensorflow::TensorShapeProto* new_tensor_shape = new ::tensorflow::TensorShapeProto;
    new_tensor_shape->CopyFrom(*tensor_shape);
    tensor_shape = new_tensor_shape;
  }
  tensor_shape_ = tensor_shape;
  if (tensor_shape) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:adaptive_system.Gradient.tensor_shape)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// NamedGradients

// map<string, .adaptive_system.Gradient> name_to_gradient = 1;
inline int NamedGradients::name_to_gradient_size() const {
  return name_to_gradient_.size();
}
inline void NamedGradients::clear_name_to_gradient() {
  name_to_gradient_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::adaptive_system::Gradient >&
NamedGradients::name_to_gradient() const {
  // @@protoc_insertion_point(field_map:adaptive_system.NamedGradients.name_to_gradient)
  return name_to_gradient_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::adaptive_system::Gradient >*
NamedGradients::mutable_name_to_gradient() {
  // @@protoc_insertion_point(field_mutable_map:adaptive_system.NamedGradients.name_to_gradient)
  return name_to_gradient_.MutableMap();
}

// -------------------------------------------------------------------

// PartialState

// .tensorflow.TensorProto tensor = 1;
inline bool PartialState::has_tensor() const {
  return this != internal_default_instance() && tensor_ != NULL;
}
inline void PartialState::clear_tensor() {
  if (GetArenaNoVirtual() == NULL && tensor_ != NULL) delete tensor_;
  tensor_ = NULL;
}
inline const ::tensorflow::TensorProto& PartialState::tensor() const {
  // @@protoc_insertion_point(field_get:adaptive_system.PartialState.tensor)
  return tensor_ != NULL ? *tensor_
                         : *::tensorflow::TensorProto::internal_default_instance();
}
inline ::tensorflow::TensorProto* PartialState::mutable_tensor() {
  
  if (tensor_ == NULL) {
    tensor_ = new ::tensorflow::TensorProto;
  }
  // @@protoc_insertion_point(field_mutable:adaptive_system.PartialState.tensor)
  return tensor_;
}
inline ::tensorflow::TensorProto* PartialState::release_tensor() {
  // @@protoc_insertion_point(field_release:adaptive_system.PartialState.tensor)
  
  ::tensorflow::TensorProto* temp = tensor_;
  tensor_ = NULL;
  return temp;
}
inline void PartialState::set_allocated_tensor(::tensorflow::TensorProto* tensor) {
  delete tensor_;
  if (tensor != NULL && tensor->GetArena() != NULL) {
    ::tensorflow::TensorProto* new_tensor = new ::tensorflow::TensorProto;
    new_tensor->CopyFrom(*tensor);
    tensor = new_tensor;
  }
  tensor_ = tensor;
  if (tensor) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:adaptive_system.PartialState.tensor)
}

// float loss = 2;
inline void PartialState::clear_loss() {
  loss_ = 0;
}
inline float PartialState::loss() const {
  // @@protoc_insertion_point(field_get:adaptive_system.PartialState.loss)
  return loss_;
}
inline void PartialState::set_loss(float value) {
  
  loss_ = value;
  // @@protoc_insertion_point(field_set:adaptive_system.PartialState.loss)
}

// -------------------------------------------------------------------

// Loss

// float loss = 1;
inline void Loss::clear_loss() {
  loss_ = 0;
}
inline float Loss::loss() const {
  // @@protoc_insertion_point(field_get:adaptive_system.Loss.loss)
  return loss_;
}
inline void Loss::set_loss(float value) {
  
  loss_ = value;
  // @@protoc_insertion_point(field_set:adaptive_system.Loss.loss)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace adaptive_system

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::adaptive_system::GRAD_QUANT_LEVEL> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::adaptive_system::GRAD_QUANT_LEVEL>() {
  return ::adaptive_system::GRAD_QUANT_LEVEL_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rpc_5fservice_2eproto__INCLUDED
